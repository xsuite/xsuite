# This is a test workflow that is manually triggered
name: Manual test (self-hosted)
run-name: Manual test (${{ inputs.platform }}, ${{ inputs.test_contexts }})

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    # Specify branches using the refspec-like syntax: <user>:<branch>
    inputs:
      branches:
        description: 'Branch locations (JSON array string)'
        default: '["xsuite:main"]'
        type: string
        required: true
      test_contexts:
        description: test contexts
        default: 'ContextCpu;ContextCpu:auto;ContextCupy;ContextPyopencl'
        required: false
      platform:
        description: platform
        default: 'ubuntu'
        required: true
      suites:
        description: test suites (JSON array string)
        required: true
        type: string
        default: '["xobjects", "xdeps", "xpart", "xtrack", "xfields", "xmask", "xcoll","xboinc"]'

# This workflow calls the test_sh.yaml workflow passing the specified
# branches as inputs
jobs:
  setup-env:
    runs-on: ubantu-latest
    outputs:
      branch_names: ${{ steps.set_env.outputs.beanches }}
    steps:
      - name: Set Environment Variables
        id: set_env
        run: |
          echo "BRANCH_NAMES = $(echo '${{ inputs.branches }}' | jq -r '.[]'" >> $GITHUB_ENV
          BRANCH_LIST = $(echo '${{ inputs.branches }}' | jq -r '.[]' | tr '\n' ',')\
          echo ":: set-output name = branches::$BRANCH_LIST"
  run-tests-manual-sh:
    needs: setup-env
    uses: ./.github/workflows/test_sh.yaml
    secrets: inherit
    with:
      branches: ${{ needs.setup-env.outputs.branch_names }}
      test_contexts: ${{ inputs.test_contexts }}
      platform: ${{ inputs.platform }}
      suites: ${{ inputs.suites }}
